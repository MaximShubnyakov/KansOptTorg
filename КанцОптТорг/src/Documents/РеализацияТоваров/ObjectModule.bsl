Процедура ОбработкаПроведения(Отказ,Режим)
	
	// регистр ОстаткиТоваров
	Движения.ОстаткиТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Колличество = ТекСтрокаТовары.Колличество;
	КонецЦикла;

Движения.Записать ();

Если Режим = РежимПроведенияДокумента.Оперативный Тогда
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Номенклатура,
		|	ОстаткиТоваровОстатки.КолличествоОстаток КАК Колличество
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(, Номенклатура В
		|		(ВЫБРАТЬ
		|			РеализацияТоваровТовары.Номенклатура
		|		ИЗ
		|			Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|		ГДЕ
		|			РеализацияТоваровТовары.Ссылка = &Ссылка)) КАК ОстаткиТоваровОстатки
		|ГДЕ
		|	ОстаткиТоваровОстатки.КолличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Сообщить("В документе "+Ссылка+" Образовались отрицательные остатки");
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщить("По Номенклатуре "+ВыборкаДетальныеЗаписи.Номенклатура+ "Остаток"+ВыборкаДетальныеЗаписи.Колличество);
		КонецЦикла;
		
	КонецЕсли;
	
КонецЕсли;

Если Отказ Тогда
	Возврат
КонецЕсли;

Запрос = Новый Запрос;
Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиТоваровОстатки.Номенклатура,
	|	ОстаткиТоваровОстатки.КолличествоОстаток КАК Колличество,
	|	ОстаткиТоваровОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ОстаткиТоваров.Остатки(&МоментВремени, Номенклатура В
	|		(ВЫБРАТЬ
	|			РеализацияТоваровТовары.Номенклатура
	|		ИЗ
	|			Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|		ГДЕ
	|			РеализацияТоваровТовары.Ссылка = &Ссылка)) КАК ОстаткиТоваровОстатки";

Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
Запрос.УстановитьПараметр("Ссылка", Ссылка);

РезультатЗапроса = Запрос.Выполнить();

ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

Движения.ОстаткиТоваров.Записывать = Истина;

Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	
		Для Каждого Движение Из Движения.ОстаткиТоваров Цикл
			
			Если Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура Тогда
				
				Движение.Сумма = Движение.Колличество * ВыборкаДетальныеЗаписи.Сумма/ВыборкаДетальныеЗаписи.Колличество;
				
				КонецЕсли;
			
			КонецЦикла;
		
КонецЦикла;

	// регистр Продажи
	Движения.Продажи.Записывать = Истина;
	Для Каждого ТекСтрокаТовары из Товары Цикл
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Покупатель;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Колличество = ТекСтрокаТовары.Колличество;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью (Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = 0;
	Для каждого СтрокаТЧ из Товары цикл
		СуммаДокумента = СуммаДокумента + СтрокаТЧ.Сумма;
	КонецЦикла;
КонецПроцедуры



Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если не Покупатель.ЯвляетсяКлиентом Тогда
		Отказ = Истина;
		Сообщить("Неверно. Должен быть выбран Клиент")
		КонецЕсли
КонецПроцедуры
